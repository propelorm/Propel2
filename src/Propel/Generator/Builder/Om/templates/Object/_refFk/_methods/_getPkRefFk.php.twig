{#
     Adds the method that gets a one-to-one related referrer fkey.
     This is for one-to-one relationship special case.
#}

{% set joinedTableObjectBuilder = builder.newObjectBuilder(refFk.table) %}
{% set className = joinedTableObjectBuilder.objectClassName %}

{% set queryClassName = builder.classNameFromBuilder(builder.newStubQueryBuilder(refFk.table)) %}

{% set varName = builder.pKRefFKVarName(refFk) %}

/**
 * Gets a single {{ className }} object, which is related to this object by a one-to-one relationship.
 *
 * @param      ConnectionInterface $con optional connection object
 * @return                 {{ className }}
 * @throws PropelException
 */
public function get{{ builder.refFKPhpNameAffix(refFk, false) }}(ConnectionInterface $con = null)
{
    if ($this->{{ varName }} === null && $this->isNew()) {
        $this->{{ varName }} = {{ queryClassName }}::create()->findPk($this->getPrimaryKey(), $con);
    }

    return $this->{{ varName }};
}