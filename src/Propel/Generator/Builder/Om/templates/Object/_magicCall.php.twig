/**
 * Catches calls to undefined methods.
 *
 * Provides magic import/export method support (fromXML()/toXML(), fromYAML()/toYAML(), etc.).
 * Allows to define default __call() behavior if you overwrite __call()
 *
 * @param string $name
 * @param mixed  $params
 *
 * @return array|string
 */
public function __call($name, $params)
{
    {{ behavior_api.include('Object/_hooks/_magicCall.php.twig', builder) }}

    return $this->__parentCall($name, $params);
}

/**
 * Derived method to catches calls to undefined methods.
 *
 * Provides magic import/export method support (fromXML()/toXML(), fromYAML()/toYAML(), etc.).
 * Allows to define default __call() behavior if you overwrite __call()
 *
 * @param string $name
 * @param mixed  $params
 *
 * @return array|string
 */
public function __parentCall($name, $params)
{
    if (0 === strpos($name, 'get')) {
        $virtualColumn = substr($name, 3);
        if ($this->hasVirtualColumn($virtualColumn)) {
            return $this->getVirtualColumn($virtualColumn);
        }

        $virtualColumn = lcfirst($virtualColumn);
        if ($this->hasVirtualColumn($virtualColumn)) {
            return $this->getVirtualColumn($virtualColumn);
        }
    }

    if (0 === strpos($name, 'from')) {
        $format = substr($name, 4);

        return $this->importFrom($format, reset($params));
    }

    if (0 === strpos($name, 'to')) {
        $format = substr($name, 2);
        $includeLazyLoadColumns = isset($params[0]) ? $params[0] : true;

        return $this->exportTo($format, $includeLazyLoadColumns);
    }

    throw new BadMethodCallException(sprintf('Call to undefined method: %s.', $name));
}
